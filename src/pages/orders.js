import moment from "moment";
import { getSession, useSession } from "next-auth/react";
import Head from "next/head";
import { useRouter } from "next/router";
import React from "react";
import db from "../../firebase";
import Header from "../components/Header";
import Order from "../components/Order";

function Orders({ orders }) {
  const { data: session } = useSession();
  const router = useRouter();

  console.log("Orders....", orders);
  return (
    <div>
      <Head>
        <title>Amazon 2.0 - My Orders</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main className="max-w-screen-lg mx-auto p-10">
        <h1 className="text-3xl border-b mb-2 pb-1 border-yellow-400">
          Your Order
        </h1>
        {session ? (
          <h2 className="text-xl">
            {orders?.length > 0 ? (
              <>
                {orders?.length} Orders{orders?.length > 1 && "s"}
              </>
            ) : (
              <>
                You don't have any order yet. Go visit the{" "}
                <button
                  onClick={() => router.push("/")}
                  className="link text-yellow-400 underline hover:no-underline"
                >
                  Homepage Store
                </button>{" "}
                to purchase some items.
              </>
            )}
          </h2>
        ) : (
          <h2>Please sign in to see your orders</h2>
        )}

        <div className="mt-5 space-y-4">
          {orders?.map((item) => (
            <Order
              key={item.id}
              id={item.id}
              amount={item.amount}
              amountShipping={item.amountShipping}
              images={item.images}
              timestamp={item.timestamp}
              items={item.items}
            />
          ))}
        </div>
      </main>
    </div>
  );
}

export async function getServerSideProps(context) {
  const stripe = require("stripe")(process.env.STRIPE_SECRET_KEY);

  //  Get the users logged in credentials...
  const session = await getSession(context);

  if (!session) {
    return {
      props: {},
    };
  }
  // Firebase db
  const stripeOrders = await db
    .collection("users")
    .doc(session.user.email)
    .collection("orders")
    .orderBy("timestamp", "desc")
    .get();

  //  Stripe Orders
  const orders = await Promise.all(
    stripeOrders.docs.map(async (order) => ({
      id: order.id,
      amount: order.data().amount,
      amountShipping: order.data().amount_shipping,
      images: order.data().images,
      timestamp: moment(order.data().timestamp.toDate()).unix(),
      items: (
        await stripe.checkout.sessions.listLineItems(order.id, {
          limit: 100,
        })
      ).data,
    }))
  );

  console.log("SSR stripeOrders...", stripeOrders);
  console.log("SSR orders...", orders);

  return {
    props: {
      orders: orders,
    },
  };
}

export default Orders;
